<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kgc.dao.GoodMapper">
  <resultMap id="BaseResultMap" type="com.kgc.entity.Good">
    <constructor>
      <idArg column="good_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="good_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="good_price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="good_num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="goodType_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    good_id, good_name, good_price, good_num, create_date, goodType_id
  </sql>
  <select id="selectByExample" parameterType="com.kgc.entity.GoodExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from good
    where good_id = #{goodId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from good
    where good_id = #{goodId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kgc.entity.GoodExample">
    delete from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kgc.entity.Good">
    insert into good (good_id, good_name, good_price, 
      good_num, create_date, goodType_id
      )
    values (#{goodId,jdbcType=INTEGER}, #{goodName,jdbcType=VARCHAR}, #{goodPrice,jdbcType=DOUBLE}, 
      #{goodNum,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{goodtypeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kgc.entity.Good">
    insert into good
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodId != null">
        good_id,
      </if>
      <if test="goodName != null">
        good_name,
      </if>
      <if test="goodPrice != null">
        good_price,
      </if>
      <if test="goodNum != null">
        good_num,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="goodtypeId != null">
        goodType_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodId != null">
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="goodName != null">
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodPrice != null">
        #{goodPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodNum != null">
        #{goodNum,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="goodtypeId != null">
        #{goodtypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kgc.entity.GoodExample" resultType="java.lang.Long">
    select count(*) from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update good
    <set>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.goodName != null">
        good_name = #{record.goodName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodPrice != null">
        good_price = #{record.goodPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodNum != null">
        good_num = #{record.goodNum,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodtypeId != null">
        goodType_id = #{record.goodtypeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update good
    set good_id = #{record.goodId,jdbcType=INTEGER},
      good_name = #{record.goodName,jdbcType=VARCHAR},
      good_price = #{record.goodPrice,jdbcType=DOUBLE},
      good_num = #{record.goodNum,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      goodType_id = #{record.goodtypeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kgc.entity.Good">
    update good
    <set>
      <if test="goodName != null">
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodPrice != null">
        good_price = #{goodPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodNum != null">
        good_num = #{goodNum,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="goodtypeId != null">
        goodType_id = #{goodtypeId,jdbcType=INTEGER},
      </if>
    </set>
    where good_id = #{goodId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kgc.entity.Good">
    update good
    set good_name = #{goodName,jdbcType=VARCHAR},
      good_price = #{goodPrice,jdbcType=DOUBLE},
      good_num = #{goodNum,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      goodType_id = #{goodtypeId,jdbcType=INTEGER}
    where good_id = #{goodId,jdbcType=INTEGER}
  </update>

  <resultMap id="GoodResultMap" type="com.kgc.entity.Good" extends="BaseResultMap">
    <association property="goodtype" resultMap="com.kgc.dao.GoodtypeMapper.BaseResultMap"></association>
  </resultMap>
  <select id="findAll" resultMap="GoodResultMap">
    SELECT g.*,t.goodType_name
    FROM good g LEFT JOIN goodtype t ON g.goodType_id=t.goodType_id
    <where>
      <if test="goodtypeId!=null">
        and g.goodType_id = #{goodtypeId}
      </if>
      <if test="goodName!=null">
        and good_name like concat('%',#{goodName},'%')
      </if>
    </where>
  </select>
</mapper>